[1mdiff --git a/.github/workflows/gpt-review.yml b/.github/workflows/gpt-review.yml[m
[1mnew file mode 100644[m
[1mindex 000000000..201cd8ed5[m
[1m--- /dev/null[m
[1m+++ b/.github/workflows/gpt-review.yml[m
[36m@@ -0,0 +1,22 @@[m
[32m+[m[32mname: AI Code Reviewer[m
[32m+[m
[32m+[m[32mon:[m
[32m+[m[32m  pull_request:[m
[32m+[m[32m    types:[m
[32m+[m[32m      - labeled[m
[32m+[m[32mpermissions: write-all[m
[32m+[m[32mjobs:[m
[32m+[m[32m  review:[m
[32m+[m[32m    if: ${{ github.event.label.name == 'review' }}[m
[32m+[m[32m    runs-on: ubuntu-latest[m
[32m+[m[32m    steps:[m
[32m+[m[32m      - name: Checkout Repo[m
[32m+[m[32m        uses: actions/checkout@v3[m
[32m+[m
[32m+[m[32m      - name: AI Code Reviewer[m
[32m+[m[32m        uses: glific/ai-codereviewer@main[m
[32m+[m[32m        with:[m
[32m+[m[32m          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}[m
[32m+[m[32m          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}[m
[32m+[m[32m          OPENAI_API_MODEL: "gpt-4" # Optional: defaults to "gpt-4"[m
[32m+[m[32m          exclude: "**/*.json, **/*.md" # Optional: exclude patterns separated by commas[m
[1mdiff --git a/package.json b/package.json[m
[1mindex 30282d842..04a4aca0a 100644[m
[1m--- a/package.json[m
[1m+++ b/package.json[m
[36m@@ -18,7 +18,7 @@[m
     "@emoji-mart/react": "^1.1.1",[m
     "@emotion/react": "^11.11.1",[m
     "@emotion/styled": "^11.11.0",[m
[31m-    "@glific/flow-editor": "^1.19.3",[m
[32m+[m[32m    "@glific/flow-editor": "^1.19.3-1",[m
     "@mui/icons-material": "^5.14.16",[m
     "@mui/material": "^5.14.16",[m
     "@mui/x-date-pickers": "^6.17.0",[m
[1mdiff --git a/src/common/constants.ts b/src/common/constants.ts[m
[1mindex c80d56e9a..b87964443 100644[m
[1m--- a/src/common/constants.ts[m
[1m+++ b/src/common/constants.ts[m
[36m@@ -152,6 +152,9 @@[m [mexport const GUPSHUP_QUICK_REPLY =[m
 export const CALL_TO_ACTION = 'CALL_TO_ACTION';[m
 export const LIST = 'LIST';[m
 export const QUICK_REPLY = 'QUICK_REPLY';[m
[32m+[m[32mexport const LOCATION_REQUEST = 'LOCATION_REQUEST_MESSAGE';[m
[32m+[m[32mexport const TERMS_OF_USE_LINK = 'https://tides.coloredcow.com/terms-of-use';[m
[32m+[m[32mexport const COMPACT_MESSAGE_LENGTH = 35;[m
 [m
 // Gupshup sample media[m
 export const SAMPLE_MEDIA_FOR_SIMULATOR = [[m
[36m@@ -209,10 +212,3 @@[m [mexport const yupPasswordValidation = (t: any) =>[m
     )[m
     .min(10, t('Password must be at least 10 characters long.'))[m
     .required(t('Input required'));[m
[31m-[m
[31m-export const INTERACTIVE_QUICK_REPLY = 'QUICK_REPLY';[m
[31m-export const INTERACTIVE_LIST = 'LIST';[m
[31m-[m
[31m-export const TERMS_OF_USE_LINK = 'https://tides.coloredcow.com/terms-of-use';[m
[31m-[m
[31m-export const COMPACT_MESSAGE_LENGTH = 35;[m
[1mdiff --git a/src/common/utils.ts b/src/common/utils.ts[m
[1mindex 4309a09cf..f060406ff 100644[m
[1m--- a/src/common/utils.ts[m
[1m+++ b/src/common/utils.ts[m
[36m@@ -134,6 +134,8 @@[m [mexport const getInteractiveMessageBody = (interactiveJSON: any) => {[m
       default:[m
         break;[m
     }[m
[32m+[m[32m  } else if (interactiveJSON.type === 'location_request_message') {[m
[32m+[m[32m    messageBody = interactiveJSON.body.text;[m
   }[m
 [m
   return messageBody;[m
[1mdiff --git a/src/components/simulator/Simulator.tsx b/src/components/simulator/Simulator.tsx[m
[1mindex 77910a681..67d3a360a 100644[m
[1m--- a/src/components/simulator/Simulator.tsx[m
[1m+++ b/src/components/simulator/Simulator.tsx[m
[36m@@ -24,9 +24,10 @@[m [mimport ResetIcon from 'assets/images/icons/Reset/Dark.svg?react';[m
 import {[m
   TIME_FORMAT,[m
   SAMPLE_MEDIA_FOR_SIMULATOR,[m
[31m-  INTERACTIVE_LIST,[m
[31m-  INTERACTIVE_QUICK_REPLY,[m
[32m+[m[32m  LIST,[m
[32m+[m[32m  QUICK_REPLY,[m
   DEFAULT_MESSAGE_LIMIT,[m
[32m+[m[32m  LOCATION_REQUEST,[m
 } from 'common/constants';[m
 import { GUPSHUP_CALLBACK_URL } from 'config';[m
 import { ChatMessageType } from 'containers/Chat/ChatMessages/ChatMessage/ChatMessageType/ChatMessageType';[m
[36m@@ -54,6 +55,7 @@[m [mimport {[m
 } from 'graphql/subscriptions/Simulator';[m
 import { updateSimulatorConversations } from 'services/SubscriptionService';[m
 import styles from './Simulator.module.css';[m
[32m+[m[32mimport { LocationRequestTemplate } from 'containers/Chat/ChatMessages/ChatMessage/LocationRequestTemplate/LocationRequestTemplate';[m
 [m
 export interface SimulatorProps {[m
   showSimulator: boolean;[m
[36m@@ -296,7 +298,7 @@[m [mexport const Simulator = ({[m
     if (content) {[m
       isInteractiveContentPresent = !!Object.entries(content).length;[m
 [m
[31m-      if (isInteractiveContentPresent && messageType === INTERACTIVE_LIST) {[m
[32m+[m[32m      if (isInteractiveContentPresent && messageType === LIST) {[m
         template = ([m
           <>[m
             <ListReplyTemplate[m
[36m@@ -311,7 +313,7 @@[m [mexport const Simulator = ({[m
         );[m
       }[m
 [m
[31m-      if (isInteractiveContentPresent && messageType === INTERACTIVE_QUICK_REPLY) {[m
[32m+[m[32m      if (isInteractiveContentPresent && messageType === QUICK_REPLY) {[m
         template = ([m
           <QuickReplyTemplate[m
             {...content}[m
[36m@@ -323,6 +325,15 @@[m [mexport const Simulator = ({[m
           />[m
         );[m
       }[m
[32m+[m[32m      if (isInteractiveContentPresent && messageType === LOCATION_REQUEST) {[m
[32m+[m[32m        template = ([m
[32m+[m[32m          <LocationRequestTemplate[m
[32m+[m[32m            content={content}[m
[32m+[m[32m            isSimulator[m
[32m+[m[32m            onSendLocationClick={(payload: any) => sendMessage(sender, payload)}[m
[32m+[m[32m          />[m
[32m+[m[32m        );[m
[32m+[m[32m      }[m
     }[m
 [m
     return ([m
[36m@@ -386,7 +397,7 @@[m [mexport const Simulator = ({[m
       const { templateType, interactiveContent } = interactiveMessage;[m
       const previewMessage = renderMessage(interactiveMessage, 'received', 0, true);[m
       setSimulatedMessage(previewMessage);[m
[31m-      if (templateType === INTERACTIVE_LIST) {[m
[32m+[m[32m      if (templateType === LIST) {[m
         const { items } = JSON.parse(interactiveContent);[m
         setSelectedListTemplate(items);[m
       } else {[m
[1mdiff --git a/src/containers/Chat/ChatMessages/ChatMessage/ChatMessage.tsx b/src/containers/Chat/ChatMessages/ChatMessage/ChatMessage.tsx[m
[1mindex 844ea8fcb..cc5b8aebc 100644[m
[1m--- a/src/containers/Chat/ChatMessages/ChatMessage/ChatMessage.tsx[m
[1m+++ b/src/containers/Chat/ChatMessages/ChatMessage/ChatMessage.tsx[m
[36m@@ -9,9 +9,10 @@[m [mimport MessageIcon from 'assets/images/icons/Dropdown.svg?react';[m
 import {[m
   DATE_FORMAT,[m
   TIME_FORMAT,[m
[31m-  INTERACTIVE_LIST,[m
[31m-  INTERACTIVE_QUICK_REPLY,[m
[32m+[m[32m  LIST,[m
[32m+[m[32m  QUICK_REPLY,[m
   VALID_URL_REGEX,[m
[32m+[m[32m  LOCATION_REQUEST,[m
 } from 'common/constants';[m
 import { WhatsAppToJsx, WhatsAppTemplateButton } from 'common/RichEditor';[m
 import { Tooltip } from 'components/UI/Tooltip/Tooltip';[m
[36m@@ -23,6 +24,7 @@[m [mimport { ListReplyTemplate, ChatTemplate } from '../ListReplyTemplate/ListReplyT[m
 import { QuickReplyTemplate } from '../QuickReplyTemplate/QuickReplyTemplate';[m
 import styles from './ChatMessage.module.css';[m
 import { setNotification } from 'common/notification';[m
[32m+[m[32mimport { LocationRequestTemplate } from './LocationRequestTemplate/LocationRequestTemplate';[m
 [m
 export interface ChatMessageProps {[m
   id: number;[m
[36m@@ -260,14 +262,18 @@[m [mexport const ChatMessage = ({[m
   }[m
 [m
   let template = null;[m
[31m-  if (type === INTERACTIVE_LIST) {[m
[32m+[m[32m  if (type === LIST) {[m
     template = <ListReplyTemplate {...content} disabled component={ChatTemplate} />;[m
   }[m
 [m
[31m-  if (type === INTERACTIVE_QUICK_REPLY) {[m
[32m+[m[32m  if (type === QUICK_REPLY) {[m
     template = <QuickReplyTemplate {...content} disabled />;[m
   }[m
 [m
[32m+[m[32m  if (type === LOCATION_REQUEST) {[m
[32m+[m[32m    template = <LocationRequestTemplate content={content} disabled />;[m
[32m+[m[32m  }[m
[32m+[m
   let displayLabel;[m
   if (flowLabel) {[m
     const labels = flowLabel.split(',');[m
[1mdiff --git a/src/containers/Chat/ChatMessages/ChatMessage/LocationRequestTemplate/LocationRequestTemplate.module.css b/src/containers/Chat/ChatMessages/ChatMessage/LocationRequestTemplate/LocationRequestTemplate.module.css[m
[1mnew file mode 100644[m
[1mindex 000000000..89dad3aa3[m
[1m--- /dev/null[m
[1m+++ b/src/containers/Chat/ChatMessages/ChatMessage/LocationRequestTemplate/LocationRequestTemplate.module.css[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32m.MessageContent {[m
[32m+[m[32m  max-width: 100%;[m
[32m+[m[32m  border-radius: 12px 12px 0px 0px;[m
[32m+[m[32m  font-family: 'Heebo', sans-serif, emoji;[m
[32m+[m[32m  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.4);[m
[32m+[m[32m  clear: both;[m
[32m+[m[32m  max-width: 404px;[m
[32m+[m[32m  min-width: 85px;[m
[32m+[m[32m  padding: 10px;[m
[32m+[m[32m  background: white;[m
[32m+[m[32m  border-bottom: 1px solid rgba(0, 0, 0, 0.1);[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.SimulatorButton {[m
[32m+[m[32m  width: 100%;[m
[32m+[m[32m  text-transform: none !important;[m
[32m+[m[32m  border-radius: 0px 0px 15px 15px !important;[m
[32m+[m[32m  background: white !important;[m
[32m+[m[32m  border: 1px solid rgba(0, 0, 0, 0.1) !important;[m
[32m+[m[32m  border-top: none !important[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32m.ChatButton {[m
[32m+[m[32m  composes: SimulatorButton;[m
[32m+[m[32m  padding: 5px 20px !important;[m
[32m+[m[32m}[m
[1mdiff --git a/src/containers/Chat/ChatMessages/ChatMessage/LocationRequestTemplate/LocationRequestTemplate.tsx b/src/containers/Chat/ChatMessages/ChatMessage/LocationRequestTemplate/LocationRequestTemplate.tsx[m
[1mnew file mode 100644[m
[1mindex 000000000..1439adf62[m
[1m--- /dev/null[m
[1m+++ b/src/containers/Chat/ChatMessages/ChatMessage/LocationRequestTemplate/LocationRequestTemplate.tsx[m
[36m@@ -0,0 +1,48 @@[m
[32m+[m[32mimport { Button } from '@mui/material';[m
[32m+[m[32mimport LocationIconDark from 'assets/images/icons/Location/Dark.svg?react';[m
[32m+[m[32mimport styles from './LocationRequestTemplate.module.css';[m
[32m+[m[32mimport { ChatMessageType } from '../ChatMessageType/ChatMessageType';[m
[32m+[m
[32m+[m[32mexport interface LocationRequestTemplateProps {[m
[32m+[m[32m  content: any;[m
[32m+[m[32m  disabled?: boolean;[m
[32m+[m
[32m+[m[32m  isSimulator?: boolean;[m
[32m+[m[32m  onSendLocationClick?: any;[m
[32m+[m[32m}[m
[32m+[m
[32m+[m[32mconst locationPayload = {[m
[32m+[m[32m  type: 'location',[m
[32m+[m[32m  name: 'location',[m
[32m+[m[32m  id: 'LOCATION',[m
[32m+[m[32m  payload: {[m
[32m+[m[32m    latitude: '41.725556',[m
[32m+[m[32m    longitude: '-49.946944',[m
[32m+[m[32m  },[m
[32m+[m[32m};[m
[32m+[m
[32m+[m[32mexport const LocationRequestTemplate = ({[m
[32m+[m[32m  content,[m
[32m+[m[32m  disabled = false,[m
[32m+[m[32m  isSimulator = false,[m
[32m+[m
[32m+[m[32m  onSendLocationClick = () => {},[m
[32m+[m[32m}: LocationRequestTemplateProps) => {[m
[32m+[m[32m  const body = content.body.text;[m
[32m+[m[32m  return ([m
[32m+[m[32m    <div>[m
[32m+[m[32m      <div className={styles.MessageContent}>[m
[32m+[m[32m        <ChatMessageType type="TEXT" body={body} isSimulatedMessage={isSimulator} />[m
[32m+[m[32m      </div>[m
[32m+[m[32m      <Button[m
[32m+[m[32m        variant="text"[m
[32m+[m[32m        disabled={disabled}[m
[32m+[m[32m        startIcon={<LocationIconDark />}[m
[32m+[m[32m        onClick={() => onSendLocationClick({ payload: locationPayload })}[m
[32m+[m[32m        className={isSimulator ? styles.SimulatorButton : styles.ChatButton}[m
[32m+[m[32m      >[m
[32m+[m[32m        Send Location[m
[32m+[m[32m      </Button>[m
[32m+[m[32m    </div>[m
[32m+[m[32m  );[m
[32m+[m[32m};[m
[1mdiff --git a/src/containers/InteractiveMessage/InteractiveMessage.helper.ts b/src/containers/InteractiveMessage/InteractiveMessage.helper.ts[m
[1mindex fd6565891..fea220abb 100644[m
[1m--- a/src/containers/InteractiveMessage/InteractiveMessage.helper.ts[m
[1m+++ b/src/containers/InteractiveMessage/InteractiveMessage.helper.ts[m
[36m@@ -1,5 +1,5 @@[m
 import axios from 'axios';[m
[31m-import { LIST, QUICK_REPLY } from 'common/constants';[m
[32m+[m[32mimport { LIST, LOCATION_REQUEST, QUICK_REPLY } from 'common/constants';[m
 import { getPlainTextFromEditor } from 'common/RichEditor';[m
 import { FLOW_EDITOR_API } from 'config';[m
 import { getAuthSession } from 'services/AuthService';[m
[36m@@ -79,7 +79,7 @@[m [mexport const validator = (templateType: any, t: any) => {[m
     validation.globalButton = Yup.string()[m
       .required(t('Required'))[m
       .max(20, t('Button value can be at most 20 characters'));[m
[31m-  } else {[m
[32m+[m[32m  } else if (templateType === QUICK_REPLY) {[m
     validation.templateButtons = Yup.array()[m
       .of([m
         Yup.object().shape({[m
[36m@@ -117,53 +117,58 @@[m [mexport const convertJSONtoStateData = (JSONData: any, interactiveType: string, l[m
   const data = { ...JSONData };[m
   const { title, body, items, content, options, globalButtons } = data;[m
 [m
[31m-  if (interactiveType === QUICK_REPLY) {[m
[31m-    const { type, header, url, text, caption } = content;[m
[31m-    const result: any = {};[m
[31m-    result.templateButtons = options.map((option: any) => ({ value: option.title }));[m
[31m-    result.title = header || '';[m
[31m-    switch (type) {[m
[31m-      case 'image':[m
[31m-      case 'video':[m
[31m-        result.type = type.toUpperCase();[m
[31m-        result.attachmentURL = url;[m
[31m-        result.title = label;[m
[31m-        break;[m
[31m-      case 'file':[m
[31m-        result.type = 'DOCUMENT';[m
[31m-        result.attachmentURL = url;[m
[31m-[m
[31m-        result.title = label;[m
[31m-        break;[m
[31m-      default:[m
[31m-        result.type = null;[m
[32m+[m[32m  let result: any = {};[m
[32m+[m[32m  switch (interactiveType) {[m
[32m+[m[32m    case QUICK_REPLY: {[m
[32m+[m[32m      const { type, header, url, text, caption } = content;[m
[32m+[m[32m      result.templateButtons = options.map((option: any) => ({ value: option.title }));[m
[32m+[m[32m      result.title = header || '';[m
[32m+[m[32m      switch (type) {[m
[32m+[m[32m        case 'image':[m
[32m+[m[32m        case 'video':[m
[32m+[m[32m          result.type = type.toUpperCase();[m
[32m+[m[32m          result.attachmentURL = url;[m
[32m+[m[32m          result.title = label;[m
[32m+[m[32m          break;[m
[32m+[m[32m        case 'file':[m
[32m+[m[32m          result.type = 'DOCUMENT';[m
[32m+[m[32m          result.attachmentURL = url;[m
[32m+[m[32m          result.title = label;[m
[32m+[m[32m          break;[m
[32m+[m[32m        default:[m
[32m+[m[32m          result.type = null;[m
[32m+[m[32m      }[m
[32m+[m[32m      result.body = text || '';[m
[32m+[m[32m      result.footer = caption;[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m    case LIST: {[m
[32m+[m[32m      result.templateButtons = items.map((item: any) => {[m
[32m+[m[32m        const itemOptions = item.options.map((option: any) => ({[m
[32m+[m[32m          title: option.title,[m
[32m+[m[32m          description: option.description,[m
[32m+[m[32m        }));[m
[32m+[m[32m        return {[m
[32m+[m[32m          title: item.title,[m
[32m+[m[32m          options: itemOptions,[m
[32m+[m[32m        };[m
[32m+[m[32m      });[m
[32m+[m[32m      result.body = body;[m
[32m+[m[32m      result.title = title;[m
[32m+[m[32m      result.globalButton = globalButtons[0].title;[m
[32m+[m[32m      break;[m
[32m+[m[32m    }[m
[32m+[m[32m    case LOCATION_REQUEST: {[m
[32m+[m[32m      result = { body: body.text, title: label };[m
[32m+[m[32m      break;[m
     }[m
[31m-    result.body = text || '';[m
[31m-    result.footer = caption;[m
[31m-    return result;[m
   }[m
[31m-[m
[31m-  const result: any = {};[m
[31m-  result.templateButtons = items.map((item: any) => {[m
[31m-    const itemOptions = item.options.map((option: any) => ({[m
[31m-      title: option.title,[m
[31m-      description: option.description,[m
[31m-    }));[m
[31m-    return {[m
[31m-      title: item.title,[m
[31m-      options: itemOptions,[m
[31m-    };[m
[31m-  });[m
[31m-  result.body = body;[m
[31m-  result.title = title;[m
[31m-  result.globalButton = globalButtons[0].title;[m
   return result;[m
 };[m
 [m
 export const getDefaultValuesByTemplate = (templateData: any) => {[m
   const { type: templateType, interactiveContent } = templateData;[m
   const data = JSON.parse(interactiveContent);[m
[31m-[m
   let result: any = {};[m
   if (templateType === QUICK_REPLY) {[m
     const { type, content, options } = data;[m
[36m@@ -177,9 +182,7 @@[m [mexport const getDefaultValuesByTemplate = (templateData: any) => {[m
     result.type = type;[m
     result.content = updatedContent;[m
     result.options = updatedOptions;[m
[31m-  }[m
[31m-[m
[31m-  if (templateType === LIST) {[m
[32m+[m[32m  } else if (templateType === LIST) {[m
     result = Object.keys(data).reduce((res: any, key: string) => {[m
       const dataVal = data[key];[m
       if (typeof dataVal === 'string') {[m
[36m@@ -202,6 +205,9 @@[m [mexport const getDefaultValuesByTemplate = (templateData: any) => {[m
 [m
       return res;[m
     }, {});[m
[32m+[m[32m  } else if (templateType === LOCATION_REQUEST) {[m
[32m+[m[32m    result.body = { text: '' };[m
[32m+[m[32m    result.title = '';[m
   }[m
   return result;[m
 };[m
[36m@@ -293,20 +299,29 @@[m [mexport const getTranslation = ([m
         default:[m
           return null;[m
       }[m
[31m-    }[m
[31m-[m
[31m-    switch (attribute) {[m
[31m-      case 'title':[m
[31m-        return defaultTemplate.title;[m
[31m-      case 'body':[m
[31m-        return defaultTemplate.body;[m
[31m-      case 'options':[m
[31m-        return {[m
[31m-          items: defaultTemplate.items,[m
[31m-          globalButton: defaultTemplate.globalButtons[0].title,[m
[31m-        };[m
[31m-      default:[m
[31m-        return null;[m
[32m+[m[32m    } else if (interactiveType === LIST) {[m
[32m+[m[32m      switch (attribute) {[m
[32m+[m[32m        case 'title':[m
[32m+[m[32m          return defaultTemplate.title;[m
[32m+[m[32m        case 'body':[m
[32m+[m[32m          return defaultTemplate.body;[m
[32m+[m[32m        case 'options':[m
[32m+[m[32m          return {[m
[32m+[m[32m            items: defaultTemplate.items,[m
[32m+[m[32m            globalButton: defaultTemplate.globalButtons[0].title,[m
[32m+[m[32m          };[m
[32m+[m[32m        default:[m
[32m+[m[32m          return null;[m
[32m+[m[32m      }[m
[32m+[m[32m    } else if (interactiveType === LOCATION_REQUEST) {[m
[32m+[m[32m      switch (attribute) {[m
[32m+[m[32m        case 'title':[m
[32m+[m[32m          return defaultTemplate.title;[m
[32m+[m[32m        case 'body':[m
[32m+[m[32m          return defaultTemplate.body.text;[m
[32m+[m[32m        default:[m
[32m+[m[32m          return null;[m
[32m+[m[32m      }[m
     }[m
   }[m
   return null;[m
[1mdiff --git a/src/containers/InteractiveMessage/InteractiveMessage.test.tsx b/src/containers/InteractiveMessage/InteractiveMessage.test.tsx[m
[1mindex d46b23a4a..6a2821fc9 100644[m
[1m--- a/src/containers/InteractiveMessage/InteractiveMessage.test.tsx[m
[1m+++ b/src/containers/InteractiveMessage/InteractiveMessage.test.tsx[m
[36m@@ -120,22 +120,16 @@[m [mtest('it renders empty interactive form', async () => {[m
   });[m
 [m
   await waitFor(() => {[m
[31m-    const [attachmentType] = screen.getAllByTestId('autocomplete-element');[m
[31m-[m
[31m-    expect(attachmentType).toBeInTheDocument();[m
[31m-[m
[31m-    attachmentType.focus();[m
[31m-    fireEvent.keyDown(attachmentType, { key: 'ArrowDown' });[m
[31m-    fireEvent.keyDown(attachmentType, { key: 'Enter' });[m
[32m+[m[32m    const [interactiveType] = screen.getAllByTestId('autocomplete-element');[m
[32m+[m[32m    expect(interactiveType).toBeInTheDocument();[m
   });[m
 [m
[31m-  // Switiching between radio buttons[m
[31m-  const [quickReplyRadio, listRadio] = screen.getAllByRole('radio');[m
[31m-  await waitFor(() => {[m
[31m-    expect(quickReplyRadio).toBeInTheDocument();[m
[31m-    expect(listRadio).toBeInTheDocument();[m
[31m-    fireEvent.click(listRadio);[m
[31m-  });[m
[32m+[m[32m  // Switiching to list[m
[32m+[m[32m  const [interactiveType] = screen.getAllByTestId('autocomplete-element');[m
[32m+[m[32m  interactiveType.focus();[m
[32m+[m[32m  fireEvent.keyDown(interactiveType, { key: 'ArrowDown' });[m
[32m+[m[32m  fireEvent.keyDown(interactiveType, { key: 'ArrowDown' });[m
[32m+[m[32m  fireEvent.keyDown(interactiveType, { key: 'Enter' });[m
 [m
   await waitFor(() => {[m
     // Adding list data[m
[36m@@ -180,9 +174,6 @@[m [mtest('it renders empty interactive form', async () => {[m
     fireEvent.click(deleteListItemButton);[m
   });[m
 [m
[31m-  // Switching back to quick reply radio[m
[31m-  fireEvent.click(quickReplyRadio);[m
[31m-[m
   await waitFor(() => {[m
     const saveButton = screen.getByText('Save');[m
     expect(saveButton).toBeInTheDocument();[m
[1mdiff --git a/src/containers/InteractiveMessage/InteractiveMessage.tsx b/src/containers/InteractiveMessage/InteractiveMessage.tsx[m
[1mindex 3af34d2ad..d3a08b06c 100644[m
[1m--- a/src/containers/InteractiveMessage/InteractiveMessage.tsx[m
[1m+++ b/src/containers/InteractiveMessage/InteractiveMessage.tsx[m
[36m@@ -21,7 +21,7 @@[m [mimport { EmojiInput } from 'components/UI/Form/EmojiInput/EmojiInput';[m
 import { AutoComplete } from 'components/UI/Form/AutoComplete/AutoComplete';[m
 import { Simulator } from 'components/simulator/Simulator';[m
 import { LanguageBar } from 'components/UI/LanguageBar/LanguageBar';[m
[31m-import { LIST, MEDIA_MESSAGE_TYPES, QUICK_REPLY } from 'common/constants';[m
[32m+[m[32mimport { LIST, LOCATION_REQUEST, MEDIA_MESSAGE_TYPES, QUICK_REPLY } from 'common/constants';[m
 import { validateMedia } from 'common/utils';[m
 import Loading from 'components/UI/Layout/Loading/Loading';[m
 import { getPlainTextFromEditor, getEditorFromContent } from 'common/RichEditor';[m
[36m@@ -49,6 +49,12 @@[m [mconst queries = {[m
   deleteItemQuery: DELETE_INTERACTIVE,[m
 };[m
 [m
[32m+[m[32mconst templateTypeOptions = [[m
[32m+[m[32m  { id: QUICK_REPLY, label: 'Reply buttons' },[m
[32m+[m[32m  { id: LIST, label: 'List message' },[m
[32m+[m[32m  { id: LOCATION_REQUEST, label: 'Location request' },[m
[32m+[m[32m];[m
[32m+[m
 export const InteractiveMessage = () => {[m
   const location: any = useLocation();[m
   const navigate = useNavigate();[m
[36m@@ -56,6 +62,7 @@[m [mexport const InteractiveMessage = () => {[m
   const [footer, setFooter] = useState('');[m
   const [body, setBody] = useState(EditorState.createEmpty());[m
   const [templateType, setTemplateType] = useState<string>(QUICK_REPLY);[m
[32m+[m[32m  const [templateTypeField, setTemplateTypeField] = useState<any>(templateTypeOptions[0]);[m
   const [templateButtons, setTemplateButtons] = useState<Array<any>>([{ value: '' }]);[m
   const [globalButton, setGlobalButton] = useState('');[m
   const [isUrlValid, setIsUrlValid] = useState<any>();[m
[36m@@ -76,6 +83,8 @@[m [mexport const InteractiveMessage = () => {[m
   const { t } = useTranslation();[m
   const params = useParams();[m
 [m
[32m+[m[32m  const isLocationRequestType = templateType === LOCATION_REQUEST;[m
[32m+[m
   const { data: tag } = useQuery(GET_TAGS, {[m
     variables: {},[m
     fetchPolicy: 'network-only',[m
[36m@@ -131,6 +140,7 @@[m [mexport const InteractiveMessage = () => {[m
     templateButtons,[m
     sendWithTitle,[m
     templateType,[m
[32m+[m[32m    templateTypeField,[m
     type,[m
     attachmentURL,[m
   };[m
[36m@@ -153,6 +163,7 @@[m [mexport const InteractiveMessage = () => {[m
     setFooter(data.footer);[m
     setBody(getEditorFromContent(data.body));[m
     setTemplateType(typeValue);[m
[32m+[m[32m    setTemplateTypeField(templateTypeOptions.find((option) => option.id === typeValue));[m
     setTimeout(() => setTemplateButtons(data.templateButtons), 100);[m
 [m
     if (typeValue === LIST) {[m
[36m@@ -221,6 +232,7 @@[m [mexport const InteractiveMessage = () => {[m
     setFooter(data.footer);[m
     setBody(getEditorFromContent(data.body));[m
     setTemplateType(typeValue);[m
[32m+[m[32m    setTemplateTypeField(templateTypeOptions.find((option) => option.id === typeValue));[m
     setTimeout(() => setTemplateButtons(data.templateButtons), 100);[m
 [m
     if (typeValue === LIST) {[m
[36m@@ -237,7 +249,7 @@[m [mexport const InteractiveMessage = () => {[m
     }[m
     setSendWithTitle(sendInteractiveTitleValue);[m
 [m
[31m-    const getTagId = tag.tags.filter((tags: any) => tags.id === tagValue.id);[m
[32m+[m[32m    const getTagId = tag.tags.filter((tags: any) => tags.id === tagValue?.id);[m
     if (getTagId.length > 0) {[m
       setTagId(getTagId[0]);[m
     }[m
[36m@@ -272,6 +284,7 @@[m [mexport const InteractiveMessage = () => {[m
     const buttonType: any = {[m
       QUICK_REPLY: { value: '' },[m
       LIST: { title: '', options: [{ title: '', description: '' }] },[m
[32m+[m[32m      LOCATION_REQUEST_MESSAGE: {},[m
     };[m
 [m
     const templateResult = stateToRestore || [buttonType[templateTypeVal]];[m
[36m@@ -463,6 +476,23 @@[m [mexport const InteractiveMessage = () => {[m
       selectedLangauge: language && language.label,[m
       onLanguageChange,[m
     },[m
[32m+[m[32m    {[m
[32m+[m[32m      component: AutoComplete,[m
[32m+[m[32m      onChange: (change: any) => {[m
[32m+[m[32m        const value = change.id;[m
[32m+[m[32m        const stateToRestore = previousState[value];[m
[32m+[m[32m        setTemplateType(value);[m
[32m+[m[32m        setTemplateTypeField(change);[m
[32m+[m[32m        setPreviousState({ [templateType]: templateButtons });[m
[32m+[m[32m        handleAddInteractiveTemplate(false, value, stateToRestore);[m
[32m+[m[32m      },[m
[32m+[m[32m      name: 'templateTypeField',[m
[32m+[m[32m      options: templateTypeOptions,[m
[32m+[m[32m      multiple: false,[m
[32m+[m[32m      disabled: params?.id !== undefined,[m
[32m+[m[32m      placeholder: 'Type',[m
[32m+[m[32m      optionLabel: 'label',[m
[32m+[m[32m    },[m
     {[m
       translation:[m
         hasTranslations && getTranslation(templateType, 'title', translations, defaultLanguage),[m
[36m@@ -477,7 +507,7 @@[m [mexport const InteractiveMessage = () => {[m
     },[m
     // checkbox is not needed in media types[m
     {[m
[31m-      skip: type && type.label,[m
[32m+[m[32m      skip: (type && type.label) || isLocationRequestType,[m
       component: Checkbox,[m
       name: 'sendWithTitle',[m
       title: t('Show title in message'),[m
[36m@@ -521,18 +551,11 @@[m [mexport const InteractiveMessage = () => {[m
       templateType,[m
       inputFields: templateButtons,[m
       disabled: false,[m
[31m-      disabledType: params?.id !== undefined,[m
       onAddClick: handleAddInteractiveTemplate,[m
       onRemoveClick: handleRemoveInteractiveTemplate,[m
       onInputChange: handleInputChange,[m
       onListItemAddClick: handleAddListItem,[m
       onListItemRemoveClick: handleRemoveListItem,[m
[31m-      onTemplateTypeChange: (value: string) => {[m
[31m-        const stateToRestore = previousState[value];[m
[31m-        setTemplateType(value);[m
[31m-        setPreviousState({ [templateType]: templateButtons });[m
[31m-        handleAddInteractiveTemplate(false, value, stateToRestore);[m
[31m-      },[m
       onGlobalButtonInputChange: (value: string) => setGlobalButton(value),[m
     },[m
   ];[m
[36m@@ -602,6 +625,24 @@[m [mexport const InteractiveMessage = () => {[m
         interactiveContent: JSON.stringify(listJSON),[m
       });[m
     }[m
[32m+[m
[32m+[m[32m    if (templateType === LOCATION_REQUEST) {[m
[32m+[m[32m      const bodyText = getPlainTextFromEditor(payload.body);[m
[32m+[m[32m      const locationJson = {[m
[32m+[m[32m        type: 'location_request_message',[m
[32m+[m[32m        body: {[m
[32m+[m[32m          type: 'text',[m
[32m+[m[32m          text: bodyText,[m
[32m+[m[32m        },[m
[32m+[m[32m        action: {[m
[32m+[m[32m          name: 'send_location',[m
[32m+[m[32m        },[m
[32m+[m[32m      };[m
[32m+[m[32m      Object.assign(updatedPayload, {[m
[32m+[m[32m        type: LOCATION_REQUEST,[m
[32m+[m[32m        interactiveContent: JSON.stringify(locationJson),[m
[32m+[m[32m      });[m
[32m+[m[32m    }[m
     return updatedPayload;[m
   };[m
 [m
[36m@@ -631,6 +672,7 @@[m [mexport const InteractiveMessage = () => {[m
     if (translations) {[m
       translationsCopy = JSON.parse(translations);[m
       translationsCopy[language.id] = JSON.parse(payloadData.interactiveContent);[m
[32m+[m[32m      setTranslations(JSON.stringify(translationsCopy));[m
     }[m
 [m
     const langIds = Object.keys(translationsCopy);[m
[36m@@ -702,7 +744,9 @@[m [mexport const InteractiveMessage = () => {[m
     },[m
   ];[m
 [m
[31m-  let formFields: any = templateType === LIST ? [...fields] : [...fields, ...attachmentInputs];[m
[32m+[m[32m  let formFields: any =[m
[32m+[m[32m    templateType === QUICK_REPLY ? [...fields, ...attachmentInputs] : [...fields];[m
[32m+[m
   formFields = [[m
     ...formFields,[m
     {[m
[1mdiff --git a/src/containers/InteractiveMessage/InteractiveMessageList/InteractiveMessageList.tsx b/src/containers/InteractiveMessage/InteractiveMessageList/InteractiveMessageList.tsx[m
[1mindex 8cf1fb740..a0e3472cd 100644[m
[1m--- a/src/containers/InteractiveMessage/InteractiveMessageList/InteractiveMessageList.tsx[m
[1m+++ b/src/containers/InteractiveMessage/InteractiveMessageList/InteractiveMessageList.tsx[m
[36m@@ -25,13 +25,13 @@[m [mconst getLabel = (text: string) => ([m
 );[m
 [m
 const getType = (text: string) => {[m
[31m-  let type = '';[m
[31m-  if (text === 'QUICK_REPLY') {[m
[31m-    type = 'Quick Reply';[m
[31m-  } else if (text === 'LIST') {[m
[31m-    type = 'List';[m
[31m-  }[m
[31m-  return <p className={styles.TableText}>{type}</p>;[m
[32m+[m[32m  const typeMappings: any = {[m
[32m+[m[32m    LOCATION_REQUEST_MESSAGE: 'Location request',[m
[32m+[m[32m    QUICK_REPLY: 'Quick Reply',[m
[32m+[m[32m    LIST: 'List',[m
[32m+[m[32m  };[m
[32m+[m
[32m+[m[32m  return <p className={styles.TableText}>{typeMappings[text]}</p>;[m
 };[m
 [m
 const getBody = (text: string) => {[m
[1mdiff --git a/src/containers/InteractiveMessage/InteractiveOptions/InteractiveOptions.test.tsx b/src/containers/InteractiveMessage/InteractiveOptions/InteractiveOptions.test.tsx[m
[1mindex 7af577f6a..9377bcb2f 100644[m
[1m--- a/src/containers/InteractiveMessage/InteractiveOptions/InteractiveOptions.test.tsx[m
[1m+++ b/src/containers/InteractiveMessage/InteractiveOptions/InteractiveOptions.test.tsx[m
[36m@@ -81,13 +81,6 @@[m [mtest('it render interactive options for list reply template', async () => {[m
 [m
   fireEvent.click(listItem1);[m
   await waitFor(() => {});[m
[31m-[m
[31m-  const [quickReplyRadio] = screen.getAllByRole('radio');[m
[31m-[m
[31m-  expect(quickReplyRadio).toBeInTheDocument();[m
[31m-  fireEvent.click(quickReplyRadio);[m
[31m-[m
[31m-  await waitFor(() => {});[m
 });[m
 [m
 const quickReplyInputFields = [{ value: 'yes' }, { value: 'no' }];[m
[1mdiff --git a/src/containers/InteractiveMessage/InteractiveOptions/InteractiveOptions.tsx b/src/containers/InteractiveMessage/InteractiveOptions/InteractiveOptions.tsx[m
[1mindex 419386540..e9a710bb4 100644[m
[1m--- a/src/containers/InteractiveMessage/InteractiveOptions/InteractiveOptions.tsx[m
[1m+++ b/src/containers/InteractiveMessage/InteractiveOptions/InteractiveOptions.tsx[m
[36m@@ -1,15 +1,7 @@[m
[31m-import {[m
[31m-  RadioGroup,[m
[31m-  FormControlLabel,[m
[31m-  Radio,[m
[31m-  FormControl,[m
[31m-  TextField,[m
[31m-  FormHelperText,[m
[31m-} from '@mui/material';[m
[32m+[m[32mimport { FormControl, TextField, FormHelperText } from '@mui/material';[m
 import { FieldArray } from 'formik';[m
 [m
[31m-import ApprovedIcon from 'assets/images/icons/Template/Approved.svg?react';[m
[31m-import { QUICK_REPLY, LIST } from 'common/constants';[m
[32m+[m[32mimport { QUICK_REPLY, LIST, LOCATION_REQUEST } from 'common/constants';[m
 import { QuickReplyTemplate } from './QuickReplyTemplate';[m
 import { ListReplyTemplate } from './ListReplyTemplate';[m
 import styles from './InteractiveOptions.module.css';[m
[36m@@ -37,14 +29,12 @@[m [mexport const InteractiveOptions = ({[m
   form,[m
   onAddClick,[m
   onRemoveClick,[m
[31m-  onTemplateTypeChange,[m
   onInputChange,[m
   onGlobalButtonInputChange,[m
   onListItemAddClick,[m
   onListItemRemoveClick,[m
   disabled = false,[m
   translation,[m
[31m-  disabledType,[m
 }: InteractiveOptionsProps) => {[m
   const { values, errors, touched, setFieldValue } = form;[m
 [m
[36m@@ -101,47 +91,6 @@[m [mexport const InteractiveOptions = ({[m
 [m
   const radioTemplateType = ([m
     <div>[m
[31m-      <RadioGroup[m
[31m-        aria-label="template-type"[m
[31m-        name="template-type"[m
[31m-        row[m
[31m-        value={templateType}[m
[31m-        onChange={(event) => onTemplateTypeChange(event.target.value)}[m
[31m-        className={styles.RadioGroupDisplay}[m
[31m-      >[m
[31m-        <div className={styles.RadioLabelWrapper}>[m
[31m-          <FormControlLabel[m
[31m-            value={QUICK_REPLY}[m
[31m-            control={[m
[31m-              <Radio[m
[31m-                disabled={disabledType}[m
[31m-                color="primary"[m
[31m-                checkedIcon={<ApprovedIcon className={styles.CheckedIcon} />}[m
[31m-                size="small"[m
[31m-              />[m
[31m-            }[m
[31m-            className={templateType === QUICK_REPLY ? styles.SelectedLabel : ''}[m
[31m-            classes={{ root: styles.RadioLabel }}[m
[31m-            label="Reply buttons"[m
[31m-          />[m
[31m-        </div>[m
[31m-        <div className={styles.RadioLabelWrapper}>[m
[31m-          <FormControlLabel[m
[31m-            value={LIST}[m
[31m-            control={[m
[31m-              <Radio[m
[31m-                disabled={disabledType}[m
[31m-                color="primary"[m
[31m-                checkedIcon={<ApprovedIcon className={styles.CheckedIcon} />}[m
[31m-                size="small"[m
[31m-              />[m
[31m-            }[m
[31m-            className={templateType === LIST ? styles.SelectedLabel : ''}[m
[31m-            classes={{ root: styles.RadioLabel }}[m
[31m-            label="List message"[m
[31m-          />[m
[31m-        </div>[m
[31m-      </RadioGroup>[m
       {templateType && templateType === LIST && ([m
         <div className={styles.GlobalButton}>[m
           {translation && <div className={styles.Translation}>{translation.globalButton}</div>}[m
[36m@@ -169,7 +118,7 @@[m [mexport const InteractiveOptions = ({[m
         </div>[m
       )}[m
 [m
[31m-      {templateType && ([m
[32m+[m[32m      {templateType && templateType !== LOCATION_REQUEST && ([m
         <div className={templateType === QUICK_REPLY ? styles.TemplateFields : ''}>[m
           <FieldArray[m
             name="templateButtons"[m
[1mdiff --git a/src/containers/Ticket/TicketList/TicketList.test.tsx b/src/containers/Ticket/TicketList/TicketList.test.tsx[m
[1mindex 8d45edb58..0911178ea 100644[m
[1m--- a/src/containers/Ticket/TicketList/TicketList.test.tsx[m
[1m+++ b/src/containers/Ticket/TicketList/TicketList.test.tsx[m
[36m@@ -18,7 +18,7 @@[m [mconst wrapper = ([m
 [m
 setUserSession(JSON.stringify({ roles: ['Admin'] }));[m
 [m
[31m-test('should load the trigger list', async () => {[m
[32m+[m[32mtest('should load the ticket list', async () => {[m
   const { getByText } = render(wrapper);[m
 [m
   expect(getByText('Loading...')).toBeInTheDocument();[m
[1mdiff --git a/src/containers/Ticket/TicketList/TicketList.tsx b/src/containers/Ticket/TicketList/TicketList.tsx[m
[1mindex 230901b0a..197703d2c 100644[m
[1m--- a/src/containers/Ticket/TicketList/TicketList.tsx[m
[1m+++ b/src/containers/Ticket/TicketList/TicketList.tsx[m
[36m@@ -190,7 +190,7 @@[m [mexport const TicketList = () => {[m
         button={{ show: false }}[m
         listIcon={ticketIcon}[m
         {...queries}[m
[31m-        searchParameter={['body']}[m
[32m+[m[32m        searchParameter={['nameOrPhone']}[m
         {...columnAttributes}[m
         additionalAction={additionalAction}[m
         filters={filter}[m
[1mdiff --git a/yarn.lock b/yarn.lock[m
[1mindex 1dbd834c3..bbd2fa01a 100644[m
[1m--- a/yarn.lock[m
[1m+++ b/yarn.lock[m
[36m@@ -732,10 +732,10 @@[m
   resolved "https://registry.yarnpkg.com/@floating-ui/utils/-/utils-0.1.6.tgz#22958c042e10b67463997bd6ea7115fe28cbcaf9"[m
   integrity sha512-OfX7E2oUDYxtBvsuS4e/jSn4Q9Qb6DzgeYtsAdkPZ47znpoNsMgZw0+tVijiv3uGNR6dgNlty6r9rzIzHjtd/A==[m
 [m
[31m-"@glific/flow-editor@^1.19.3":[m
[31m-  version "1.19.3"[m
[31m-  resolved "https://registry.yarnpkg.com/@glific/flow-editor/-/flow-editor-1.19.3.tgz#575f56a381b6c1bc6a381c2a69329b7b6d6989d1"[m
[31m-  integrity sha512-gb3BfAYBnOs5Mb/C2bcSNHQuHk9gNLUHA8q1B7vYNk/ctogfCWUi4akHoGcvRNhtAp2vUpocOynk2NiVyE4H1Q==[m
[32m+[m[32m"@glific/flow-editor@^1.19.3-1":[m
[32m+[m[32m  version "1.19.3-1"[m
[32m+[m[32m  resolved "https://registry.yarnpkg.com/@glific/flow-editor/-/flow-editor-1.19.3-1.tgz#80732ab9b38871c2581aa917381a2ca578eaf914"[m
[32m+[m[32m  integrity sha512-JFWP5Em8hyFYNgMr6IDHdrUbR/CW5DMe36W8catUfj3HqgyYsBDOjn1jvdjXeyxuqm9tX94InC9g4ZiavK/m1g==[m
   dependencies:[m
     react "^16.8.6"[m
     react-dom "^16.8.6"[m
